name: Move and Deploy Terraform Configuration

on:
  push:
    paths:
      - 'main.tf'  # Trigger this workflow when main.tf is created or updated

jobs:
  move-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Move main.tf to terraform folder
        run: |
          mkdir -p terraform
          mv main.tf terraform/main.tf

      - name: Install Azure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Extract Azure Credentials
        id: extract-creds
        run: |
          CLIENT_ID=$(awk -F' *= *' '/client_id/ {print $2}' terraform/main.tf | tr -d '"')
          CLIENT_SECRET=$(awk -F' *= *' '/client_secret/ {print $2}' terraform/main.tf | tr -d '"')
          TENANT_ID=$(awk -F' *= *' '/tenant_id/ {print $2}' terraform/main.tf | tr -d '"')
          echo "::set-output name=client_id::$CLIENT_ID"
          echo "::set-output name=client_secret::$CLIENT_SECRET"
          echo "::set-output name=tenant_id::$TENANT_ID"

      - name: Log in to Azure CLI
        run: az login --service-principal -u ${{ steps.extract-creds.outputs.client_id }} -p ${{ steps.extract-creds.outputs.client_secret }} --tenant ${{ steps.extract-creds.outputs.tenant_id }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify the version of Terraform to use

      - name: Set Terraform Variables and Initialize
        run: terraform init
        working-directory: terraform

      - name: Remove Terraform State File
        run: rm -f terraform.tfstate

      - name: Apply Terraform Configuration
        env:
          TF_VAR_tenant_id: ${{ steps.extract-creds.outputs.tenant_id }}
          TF_VAR_client_id: ${{ steps.extract-creds.outputs.client_id }}
          TF_VAR_client_secret: ${{ steps.extract-creds.outputs.client_secret }}
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve
        working-directory: terraform
